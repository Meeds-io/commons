<?xml version="1.0" encoding="UTF-8"?>

<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd http://www.exoplatform.org/xml/ns/kernel_1_2.xsd" xmlns="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd">

  <component>
    <type>org.exoplatform.commons.resource.ResourceBundleREST</type>
  </component>

  <component>
    <key>PropertyManagerConfigurator</key>
    <type>org.exoplatform.container.PropertyConfigurator</type>
    <init-params>
      <value-param>
        <name>properties.url</name>
        <value>classpath:/conf/exo.properties</value>
      </value-param>
    </init-params>
  </component>

  <component>
    <key>org.exoplatform.services.cache.CacheService</key>
    <jmx-name>cache:type=CacheService</jmx-name>
    <type>org.exoplatform.services.cache.impl.CacheServiceImpl</type>
    <init-params>
      <object-param>
        <name>cache.config.default</name>
        <object type="org.exoplatform.services.cache.ExoCacheConfig">
          <field name="name">
            <string>default</string>
          </field>
          <field name="maxSize">
            <int>30000</int>
          </field>
          <field name="liveTime">
            <long>60000</long>
          </field>
          <field name="implementation">
            <string>org.exoplatform.services.cache.concurrent.ConcurrentFIFOExoCache</string>
          </field>
        </object>
      </object-param>
    </init-params>
  </component>

  <component>
    <type>org.exoplatform.services.rest.impl.ResourceBinder</type>
  </component>

  <component>
    <type>org.exoplatform.services.scheduler.QueueTasks</type>
  </component>

  <component>
    <type>org.exoplatform.services.scheduler.impl.QuartzSheduler</type>
  </component>

  <component>
    <key>org.exoplatform.services.scheduler.JobSchedulerService</key>
    <type>org.exoplatform.services.scheduler.impl.JobSchedulerServiceImpl</type>
  </component>

  <component>
    <key>org.exoplatform.services.resources.LocaleConfigService</key>
    <type>org.exoplatform.services.resources.impl.LocaleConfigServiceImpl</type>
    <init-params>
      <value-param>
        <name>locale.config.file</name>
        <value>jar:/conf/locales-config.xml</value>
      </value-param>
    </init-params>
  </component>

  <component>
    <key>org.exoplatform.services.resources.LocalePolicy</key>
    <type>org.exoplatform.portal.application.localization.DefaultLocalePolicyService</type>
  </component>

  <component>
    <key>org.exoplatform.services.resources.ResourceBundleManager</key>
    <type>org.exoplatform.services.resources.ResourceBundleManager</type>
  </component>

  <!-- Mocked Services -->
  <component>
    <key>org.exoplatform.services.mail.MailService</key>
    <type>org.exoplatform.commons.testing.mock.MockMailService</type>
  </component>

  <component>
    <key>org.exoplatform.services.resources.ResourceBundleService</key>
    <type>org.exoplatform.services.resources.impl.SimpleResourceBundleService</type>
    <init-params>
      <values-param>
        <name>classpath.resources</name>
        <description>The resources that start with the following package name should be load from file system</description>
        <value>locale.portlet</value>
        <value>locale.test</value>
      </values-param>
      <values-param>
        <name>init.resources</name>
        <description>Initiate the following resources during the first launch</description>
        <value>locale.portal.expression</value>
      </values-param>
      <values-param>
        <name>portal.resource.names</name>
        <description>The properties files of the portal , those file will be merged into one ResoruceBundle properties
                </description>
        <value>locale.portal.expression</value>
      </values-param>
    </init-params>
  </component>

  <!-- Commons Services -->
  <component>
    <type>org.exoplatform.commons.persistence.impl.EntityManagerService</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.event.EventManager</key>
    <type>org.exoplatform.commons.event.impl.EventManagerImpl</type>
  </component>

  <component>
    <type>org.exoplatform.commons.notification.cache.TemplateCaching</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.settings.SettingService</key>
    <type>org.exoplatform.settings.cache.CacheSettingServiceImpl</type>
  </component>

  <component>
    <key>org.exoplatform.commons.embedder.OembedEmbedder</key>
    <type>org.exoplatform.commons.embedder.OembedEmbedder</type>
    <init-params>
      <value-param>
        <name>http(s)?://(www\.dailymotion\.com\/(embed\/)?video|dai\.ly)/.*</name>
        <value>//www.dailymotion.com/services/oembed?format=json&amp;url=%s&amp;maxwidth=330&amp;maxheight=200</value>
      </value-param>
      <value-param>
        <name>http(s)?://(player.)?vimeo\.com/.*</name>
        <value>//vimeo.com/api/oembed.json?url=%s&amp;maxwidth=330&amp;maxheight=200</value>
      </value-param>
      <value-param>
        <name>https?://www\.slideshare\.net/.*/.*</name>
        <value>https://www.slideshare.net/api/oembed/2?url=%s&amp;format=json&amp;maxwidth=330&amp;maxheight=200</value>
      </value-param>
      <value-param>
        <name>https?://www\.flickr\.com/photos/.*</name>
        <value>https://www.flickr.com/services/oembed/?format=json&amp;url=%s</value>
      </value-param>
    </init-params>
  </component>

  <component>
    <key>org.exoplatform.commons.embedder.YoutubeEmbedder</key>
    <type>org.exoplatform.commons.embedder.YoutubeEmbedder</type>
    <init-params>
      <value-param>
        <name>(?:https?:\/\/)?(?:www\.)?(?:youtu\.be\/|youtube\.com\/(?:embed\/|v\/|watch\?v=|watch\?.+&amp;v=))((\w|-){11})(?:\S+)?$</name>
        <value>https://www.googleapis.com/youtube/v3/videos?key=%s&amp;part=snippet&amp;id=%s</value>
      </value-param>
    </init-params>
  </component>

  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.email.dao.MailParamDAO</type>
  </component>
  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.email.dao.MailDigestDAO</type>
  </component>
  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.email.dao.MailNotifDAO</type>
  </component>
  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.email.dao.MailQueueDAO</type>
  </component>

  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.web.dao.WebNotifDAO</type>
  </component>
  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.web.dao.WebParamsDAO</type>
  </component>
  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.web.dao.WebUsersDAO</type>
  </component>

  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.email.JPAMailNotificationStorage</type>
  </component>

  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.web.JPAWebNotificationStorage</type>
  </component>

  <component>
    <type>org.exoplatform.settings.jpa.JPAUserSettingServiceImpl</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.notification.service.setting.UserSettingService</key>
    <type>org.exoplatform.settings.jpa.CacheUserSettingServiceImpl</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.notification.channel.ChannelManager</key>
    <type>org.exoplatform.commons.notification.channel.ChannelManagerImpl</type>
  </component>

  <component>
    <type>org.exoplatform.commons.notification.impl.PluginStatisticService</type>
  </component>

  <component>
    <type>org.exoplatform.commons.notification.impl.StatisticsService</type>
  </component>

  <component>
    <type>org.exoplatform.commons.notification.NotificationContextFactory</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.settings.ExoFeatureService</key>
    <type>org.exoplatform.settings.impl.ExoFeatureServiceImpl</type>
  </component>

  <component>
    <key>org.exoplatform.services.scheduler.JobSchedulerService</key>
    <type>org.exoplatform.commons.testing.mock.MockJobSchedulerService</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.notification.service.setting.PluginSettingService</key>
    <type>org.exoplatform.settings.jpa.JPAPluginSettingServiceImpl</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.notification.service.setting.PluginSettingService</key>
    <type>org.exoplatform.settings.jpa.JPAPluginSettingServiceImpl</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.notification.service.template.DigestorService</key>
    <type>org.exoplatform.commons.notification.impl.service.template.DigestorServiceImpl</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.notification.service.QueueMessage</key>
    <type>org.exoplatform.commons.notification.impl.jpa.email.JPAQueueMessageImpl</type>
    <init-params>
      <value-param>
        <name>numberOfMailPerBatch</name> <!-- Max number of mails to send in the configured period of time -->
        <value>${exo.notification.service.QueueMessage.numberOfMailPerBatch:30}</value>
      </value-param>
    </init-params>
  </component>

  <component>
    <key>org.exoplatform.commons.api.notification.service.NotificationCompletionService</key>
    <type>org.exoplatform.commons.api.notification.service.NotificationCompletionService</type>
    <init-params>
      <value-param>
        <name>async-execution</name>
        <value>false</value>
      </value-param>
    </init-params>
  </component>

  <component>
    <key>org.exoplatform.commons.api.notification.service.setting.PluginContainer</key>
    <type>org.exoplatform.commons.notification.impl.setting.NotificationPluginContainer</type>
  </component>

  <component>
    <type>org.exoplatform.commons.notification.cache.TemplateCaching</type>
  </component>

  <component>
    <key>org.exoplatform.services.mail.MailService</key>
    <type>org.exoplatform.commons.testing.mock.MockMailService</type>
  </component>

  <component>
    <type>org.exoplatform.jpa.mock.DummyDependantComponent</type>
  </component>

  <component>
    <type>org.exoplatform.services.naming.InitialContextInitializer</type>
    <init-params>
      <properties-param>
        <name>default-properties</name>
        <description>Default initial context properties</description>
        <property name="java.naming.factory.initial" value="org.exoplatform.services.naming.SimpleContextFactory" />
      </properties-param>
    </init-params>
  </component>

  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.email.dao.MailParamDAO</type>
  </component>
  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.email.dao.MailDigestDAO</type>
  </component>
  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.email.dao.MailNotifDAO</type>
  </component>
  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.email.dao.MailQueueDAO</type>
  </component>

  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.web.dao.WebNotifDAO</type>
  </component>
  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.web.dao.WebParamsDAO</type>
  </component>
  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.web.dao.WebUsersDAO</type>
  </component>

  <component>
    <type>org.exoplatform.settings.jpa.dao.SettingContextDAO</type>
  </component>
  <component>
    <type>org.exoplatform.settings.jpa.dao.SettingScopeDAO</type>
  </component>
  <component>
    <type>org.exoplatform.settings.jpa.dao.SettingsDAO</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.settings.SettingService</key>
    <type>org.exoplatform.settings.cache.CacheSettingServiceImpl</type>
  </component>

  <component>
    <type>org.exoplatform.settings.jpa.JPASettingServiceImpl</type>
  </component>

  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.email.JPAMailNotificationStorage</type>
  </component>

  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.web.JPAWebNotificationStorage</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.notification.service.storage.WebNotificationStorage</key>
    <type>org.exoplatform.commons.notification.impl.service.storage.cache.CachedWebNotificationStorage</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.notification.service.WebNotificationService</key>
    <type>org.exoplatform.commons.notification.impl.service.WebNotificationServiceImpl</type>
  </component>

  <component>
    <type>org.exoplatform.commons.notification.impl.jpa.web.JPAWebNotificationStorage</type>
  </component>

  <component>
    <type>org.exoplatform.settings.jpa.JPAUserSettingServiceImpl</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.notification.service.setting.UserSettingService</key>
    <type>org.exoplatform.settings.jpa.CacheUserSettingServiceImpl</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.notification.service.storage.NotificationService</key>
    <type>org.exoplatform.commons.notification.impl.service.NotificationServiceImpl</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.notification.service.QueueMessage</key>
    <type>org.exoplatform.commons.notification.impl.jpa.email.JPAQueueMessageImpl</type>
    <init-params>
      <value-param>
        <name>numberOfMailPerBatch</name> <!-- Max number of mails to send in the configured period of time -->
        <value>${exo.notification.service.QueueMessage.numberOfMailPerBatch:30}</value>
      </value-param>
    </init-params>
  </component>

  <component>
    <key>org.exoplatform.commons.api.notification.channel.ChannelManager</key>
    <type>org.exoplatform.commons.notification.channel.ChannelManagerImpl</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.notification.service.setting.PluginSettingService</key>
    <type>org.exoplatform.settings.jpa.JPAPluginSettingServiceImpl</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.persistence.DataInitializer</key>
    <type>org.exoplatform.commons.persistence.impl.LiquibaseDataInitializer</type>
    <init-params>
      <value-param>
        <name>liquibase.datasource</name>
        <value>${exo.jpa.datasource.name:java:/comp/env/exo-jpa_portal}</value>
      </value-param>
      <value-param>
        <name>liquibase.contexts</name>
        <value>${exo.liquibase.contexts:production}</value>
      </value-param>
    </init-params>
  </component>

  <component>
    <type>org.exoplatform.commons.cluster.StartableClusterService</type>
    <init-params>
      <value-param>
        <name>exo.cluster.startable.check.period</name>
        <value>${exo.cluster.startable.check.period:100}</value>
      </value-param>
    </init-params>
  </component>

    <!-- Bind datasource -->
  <external-component-plugins>
    <target-component>org.exoplatform.services.naming.InitialContextInitializer</target-component>
    <component-plugin>
      <name>bind.datasource</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.naming.BindReferencePlugin</type>
      <init-params>
        <value-param>
          <name>bind-name</name>
          <value>java:/comp/env/exo-jpa_portal</value>
        </value-param>
        <value-param>
          <name>class-name</name>
          <value>javax.sql.DataSource</value>
        </value-param>
        <value-param>
          <name>factory</name>
          <value>org.apache.commons.dbcp.BasicDataSourceFactory</value>
        </value-param>
        <properties-param>
          <name>ref-addresses</name>
          <description>ref-addresses</description>
          <property name="driverClassName" value="org.hsqldb.jdbcDriver" />
          <property name="url" value="jdbc:hsqldb:mem:db1" />
          <property name="username" value="sa" />
          <property name="password" value="" />
        </properties-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

  <!-- channel register -->
  <external-component-plugins>
    <target-component>org.exoplatform.commons.api.notification.channel.ChannelManager</target-component>
    <component-plugin>
      <name>mail.channel</name>
      <set-method>register</set-method>
      <type>org.exoplatform.commons.notification.channel.MailChannel</type>
      <description>Register the email channel to manager.</description>
    </component-plugin>
    <component-plugin>
      <name>web.channel</name>
      <set-method>register</set-method>
      <type>org.exoplatform.commons.notification.channel.WebChannel</type>
      <description>Register the email channel to manager.</description>
    </component-plugin>
  </external-component-plugins>

  <!-- template channel register -->
  <external-component-plugins>
    <target-component>org.exoplatform.commons.api.notification.channel.ChannelManager</target-component>
    <component-plugin>
      <name>mail.channel.template</name>
      <set-method>registerTemplateProvider</set-method>
      <type>org.exoplatform.commons.notification.mock.MockDigestMailTemplateProvider</type>
      <init-params>
        <value-param>
          <name>channel-id</name>
          <value>MAIL_CHANNEL</value>
        </value-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
    <target-component>org.exoplatform.commons.api.notification.service.setting.PluginContainer</target-component>
    <component-plugin>
      <name>notification.plugins</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.commons.notification.impl.DigestDailyPlugin</type>
      <description>Initial information for plugin.</description>
      <init-params>
        <object-param>
          <name>template.DigestDailyPlugin</name>
          <description>The template of DigestDailyPlugin</description>
          <object type="org.exoplatform.commons.api.notification.plugin.config.PluginConfig">
            <field name="pluginId">
              <string>DigestDailyPlugin</string>
            </field>
            <field name="bundlePath">
              <string>locale.notification.template.Notification</string>
            </field>
          </object>
        </object-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
    <target-component>org.exoplatform.commons.api.notification.service.setting.PluginContainer</target-component>
    <component-plugin>
      <name>notification.plugins</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.commons.notification.impl.DigestWeeklyPlugin</type>
      <description>Initial information for plugin.</description>
      <init-params>
        <object-param>
          <name>template.DigestWeeklyPlugin</name>
          <description>The template of DigestWeeklyPlugin</description>
          <object type="org.exoplatform.commons.api.notification.plugin.config.PluginConfig">
            <field name="pluginId">
              <string>DigestWeeklyPlugin</string>
            </field>
            <field name="bundlePath">
              <string>locale.notification.template.Notification</string>
            </field>
          </object>
        </object-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
    <target-component>org.exoplatform.commons.api.notification.service.setting.PluginContainer</target-component>
    <component-plugin>
      <name>notification.plugins</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.commons.notification.plugin.PluginTest</type>
      <description>Initial information for plugin.</description>
      <init-params>
        <object-param>
          <name>template.PluginTest</name>
          <description>The template of PluginTest</description>
          <object type="org.exoplatform.commons.api.notification.plugin.config.PluginConfig">
            <field name="pluginId">
              <string>TestPlugin</string>
            </field>
            <field name="resourceBundleKey">
              <string>UINotification.label.TestPlugin</string>
            </field>
            <field name="order">
              <string>1</string>
            </field>
            <field name="defaultConfig">
              <collection type="java.util.ArrayList">
                <value>
                  <string>Instantly</string>
                </value>
                <value>
                  <string>weekly</string>
                </value>
              </collection>
            </field>
            <field name="groupId">
              <string>other</string>
            </field>
            <field name="bundlePath">
              <string>locale.notification.template.Notification</string>
            </field>
          </object>
        </object-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
    <target-component>org.exoplatform.commons.api.notification.service.setting.PluginContainer</target-component>
    <component-plugin>
      <name>notification.plugins</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.commons.notification.plugin.PluginPLF41Test</type>
      <description>Initial information for plugin for PLF 4.1.</description>
      <init-params>
        <object-param>
          <name>template.PluginTest</name>
          <description>The template of PluginTest</description>
          <object type="org.exoplatform.commons.api.notification.plugin.config.PluginConfig">
            <field name="pluginId">
              <string>PluginPLF41Test</string>
            </field>
            <field name="resourceBundleKey">
              <string>UINotification.label.PluginPLF41Test</string>
            </field>
            <field name="order">
              <string>2</string>
            </field>
            <field name="defaultConfig">
              <collection type="java.util.ArrayList">
                <value>
                  <string>Instantly</string>
                </value>
                <value>
                  <string>weekly</string>
                </value>
              </collection>
            </field>
            <field name="groupId">
              <string>other</string>
            </field>
            <field name="templateConfig">
              <object type="org.exoplatform.commons.api.notification.plugin.config.TemplateConfig">
                <field name="bundlePath">
                  <string>locale.notification.template.Notification</string>
                </field>
                <field name="templatePath">
                  <string>classpath:/groovy/notification/template/TestPLF41Plugin.gtmpl</string>
                </field>
              </object>
            </field>
          </object>
        </object-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
    <target-component>org.exoplatform.commons.api.notification.service.setting.PluginContainer</target-component>
    <component-plugin>
      <name>notification.plugins</name>
      <set-method>addChildPlugin</set-method>
      <type>org.exoplatform.commons.notification.plugin.ChildPluginTest</type>
      <description>Initial information for default child plugin.</description>
      <init-params>
        <value-param>
          <name>templatePath</name>
          <value><![CDATA[classpath:/groovy/notification/template/TestChildPlugin.gtmpl]]></value>
        </value-param>
        <values-param>
          <name>parentIds</name>
          <description>Add parent of plugin</description>
          <value>TestPlugin</value>
        </values-param>
        <object-param>
          <name>template.ChildPluginTest</name>
          <description>The template of ChildPluginTest</description>
          <object type="org.exoplatform.commons.api.notification.plugin.config.PluginConfig">
            <field name="pluginId">
              <string>Child_Plugin</string>
            </field>
            <field name="bundlePath">
              <string>locale.notification.template.Notification</string>
            </field>
          </object>
        </object-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
    <target-component>org.exoplatform.commons.api.notification.service.setting.ProviderSettingService</target-component>
    <component-plugin>
      <name>notification.groups</name>
      <set-method>registerGroupConfig</set-method>
      <type>org.exoplatform.commons.api.notification.plugin.GroupProviderPlugin</type>
      <description>Initial the default groups.</description>
      <init-params>
        <object-param>
          <name>group.general</name>
          <description>The information of group general</description>
          <object type="org.exoplatform.commons.api.notification.plugin.config.GroupConfig">
            <field name="id">
              <string>general</string>
            </field>
            <field name="resourceBundleKey">
              <string>UINotification.label.group.General</string>
            </field>
            <field name="order">
              <string>1</string>
            </field>
          </object>
        </object-param>

        <object-param>
          <name>group.connections</name>
          <description>The information of group connections</description>
          <object type="org.exoplatform.commons.api.notification.plugin.config.GroupConfig">
            <field name="id">
              <string>connections</string>
            </field>
            <field name="resourceBundleKey">
              <string>UINotification.label.group.Connections</string>
            </field>
            <field name="order">
              <string>2</string>
            </field>
          </object>
        </object-param>

        <object-param>
          <name>group.spaces</name>
          <description>The information of group spaces</description>
          <object type="org.exoplatform.commons.api.notification.plugin.config.GroupConfig">
            <field name="id">
              <string>spaces</string>
            </field>
            <field name="resourceBundleKey">
              <string>UINotification.label.group.Spaces</string>
            </field>
            <field name="order">
              <string>3</string>
            </field>
          </object>
        </object-param>

        <object-param>
          <name>group.activity.stream</name>
          <description>The information of group activity stream</description>
          <object type="org.exoplatform.commons.api.notification.plugin.config.GroupConfig">
            <field name="id">
              <string>activity_stream</string>
            </field>
            <field name="resourceBundleKey">
              <string>UINotification.label.group.ActivityStream</string>
            </field>
            <field name="order">
              <string>4</string>
            </field>
          </object>
        </object-param>

        <object-param>
          <name>group.documents</name>
          <description>The information of group documents</description>
          <object type="org.exoplatform.commons.api.notification.plugin.config.GroupConfig">
            <field name="id">
              <string>documents</string>
            </field>
            <field name="resourceBundleKey">
              <string>UINotification.label.group.Documents</string>
            </field>
            <field name="order">
              <string>5</string>
            </field>
          </object>
        </object-param>

        <object-param>
          <name>group.other</name>
          <description>The information of group activity other</description>
          <object type="org.exoplatform.commons.api.notification.plugin.config.GroupConfig">
            <field name="id">
              <string>other</string>
            </field>
            <field name="resourceBundleKey">
              <string>UINotification.label.group.Other</string>
            </field>
            <field name="order">
              <string>99</string>
            </field>
          </object>
        </object-param>

      </init-params>
    </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
    <target-component>org.exoplatform.services.organization.OrganizationService</target-component>
    <component-plugin>
      <name>commons.user.setting.event.listener</name>
      <set-method>addListenerPlugin</set-method>
      <type>org.exoplatform.settings.listeners.impl.CommonsUserSettingEventListenerImpl</type>
    </component-plugin>
  </external-component-plugins>
</configuration>
